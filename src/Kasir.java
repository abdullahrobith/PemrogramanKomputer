
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class Kasir extends javax.swing.JFrame {

    /**
     * Creates new form Kasir
     */
    public Kasir() {
        initComponents();
        tabelkeranjang.getColumnModel().getColumn(0).setMinWidth(0); 
        tabelkeranjang.getColumnModel().getColumn(0).setMaxWidth(0); 
        
        enableCheckoutBtn(false);
        txtID.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        totalharga = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tombolcheckout = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtuangbayar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        uangkembali = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelkeranjang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(746, 100));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel1.setText("Produk");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("BIR STORE");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("KASIR");

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("HAPUS");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(153, 255, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 109));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel2.setText("TOTAL HARGA : ");

        totalharga.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalharga.setForeground(new java.awt.Color(0, 0, 255));
        totalharga.setText("Rp. 0,-");

        jLabel3.setFont(new java.awt.Font("SansSerif", 2, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("TERIMAKASIH TELAH BERBELANJA");

        tombolcheckout.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        tombolcheckout.setForeground(new java.awt.Color(102, 102, 102));
        tombolcheckout.setText("CHECK OUT");
        tombolcheckout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tombolcheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolcheckoutActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Uang Pembayaran : ");

        txtuangbayar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtuangbayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuangbayarActionPerformed(evt);
            }
        });
        txtuangbayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtuangbayarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtuangbayarKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Kembali : ");

        uangkembali.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        uangkembali.setForeground(new java.awt.Color(51, 51, 51));
        uangkembali.setText("Rp. 0,-");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtuangbayar, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(uangkembali)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalharga)
                        .addGap(227, 227, 227)
                        .addComponent(tombolcheckout))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtuangbayar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(uangkembali)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tombolcheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(totalharga))))
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel4.setPreferredSize(new java.awt.Dimension(452, 402));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 0));

        tabelkeranjang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAMA PRODUK", "QTY", "HARGA"
            }
        ));
        tabelkeranjang.setOpaque(false);
        jScrollPane2.setViewportView(tabelkeranjang);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
        String kode = txtID.getText();
        DefaultTableModel model = (DefaultTableModel) tabelkeranjang.getModel();
        model.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                int row = e.getFirstRow();
                int column = e.getColumn();
                if (row >= 0 && column >= 0) {
                    updateharga();
                }
            }
        });
        try {
            Connection K = Config.configDB();
            String Q = "SELECT id_produk,nama_produk,harga_jual,stok FROM produk WHERE kode_produk='" + kode + "'";
            Statement S = K.createStatement();
            ResultSet R = S.executeQuery(Q);
            while (R.next()) {
                int id = R.getInt("id_produk");
                String pName = R.getString("nama_produk");
                double pPr = R.getDouble("harga_jual");
                int pSt = R.getInt("stok");
                
//                boolean adadiTabel = cekID();                
                //cek, apakah produk sudah ada di keranjang
                int dt = tabelkeranjang.getRowCount();//0
                if(dt > 0){
                    boolean ada = false;
                    int baris = 0;
                    int QTY = 0;
                    for (int i = 0; i < dt; i++) {
                        int dt_id = Integer.parseInt(tabelkeranjang.getValueAt(i, 0).toString());
                        int dt_QTY = Integer.parseInt(tabelkeranjang.getValueAt(i, 2).toString());
                        if(dt_id == id){
                            ada = true;
                            baris = i;
                            QTY = dt_QTY;
                            break;
                        }
                    }
                    
                    //percabangan +QTY atau add new produk
                    if(ada){
                        tabelkeranjang.setValueAt(QTY+1, baris, 2);
                    }else {
                        Object[] data = {id, pName, 1, pPr};
                        model.addRow(data);
                    }
                }else{
                    Object[] data = {id, pName, 1, pPr};
                    model.addRow(data);
                } 
            }

            updateharga();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_txtIDActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        removeProductFromCart();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtuangbayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuangbayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuangbayarActionPerformed

    private void txtuangbayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuangbayarKeyReleased
        // TODO add your handling code here:
        String val = txtuangbayar.getText();
        if(!val.isEmpty()){
            int bayar = Integer.parseInt(val);
            String TH = totalharga.getText();
            String[] arrTH = TH.split(" ");
            int totalH = Integer.parseInt(arrTH[1]);
            if(bayar >= totalH){
                long sisa = bayar-totalH;
                uangkembali.setText("Rp "+sisa);
                enableCheckoutBtn(true); 
            }else{
                uangkembali.setText("Rp 0");
                enableCheckoutBtn(false); 
            }
        }else{
            uangkembali.setText("Rp 0");
            enableCheckoutBtn(false);
        }
    }//GEN-LAST:event_txtuangbayarKeyReleased

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here:
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_F4){
            txtuangbayar.setText(""); 
            txtuangbayar.requestFocus();
        }
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtuangbayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuangbayarKeyPressed
        // TODO add your handling code here:
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_F3){
            txtID.setText(""); 
            txtID.requestFocus();
        }
    }//GEN-LAST:event_txtuangbayarKeyPressed

    private void tombolcheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolcheckoutActionPerformed
        // TODO add your handling code here:
        try {
            //catat data transaksi
            Connection K = Config.configDB();
            Statement S = K.createStatement();
            SimpleDateFormat SDF = new SimpleDateFormat("yyyy-MM-dd");
            String tgl = SDF.format(new Date());
            String Q = "INSERT INTO transaksi (tanggal) VALUES ('"+tgl+"')";
            S.executeUpdate(Q);
            
            //catat data detail transaksi
            int row = tabelkeranjang.getRowCount();
            for (int i = 0; i < row; i++) {
                int id = Integer.parseInt(tabelkeranjang.getValueAt(row, 0).toString());
                int QTY = Integer.parseInt(tabelkeranjang.getValueAt(row, 2).toString());
                int Price = Integer.parseInt(tabelkeranjang.getValueAt(row, 3).toString());
                
            }
        } catch (Exception e) {
        }
        
        Nota N = new Nota(this, false);
        N.setMODEL( (DefaultTableModel) tabelkeranjang.getModel()); 
        N.setVisible(true); 
    }//GEN-LAST:event_tombolcheckoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelkeranjang;
    private javax.swing.JButton tombolcheckout;
    private javax.swing.JLabel totalharga;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtuangbayar;
    private javax.swing.JLabel uangkembali;
    // End of variables declaration//GEN-END:variables
private void updateharga() {
        try {
            double totalHarga = 0;
            int rowcount = tabelkeranjang.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                double QTY = Double.parseDouble(tabelkeranjang.getValueAt(i, 2).toString());
                double PRC = Double.parseDouble(tabelkeranjang.getValueAt(i, 3).toString());
                totalHarga += (QTY * PRC);
            }
            totalharga.setText("Rp " + (long) totalHarga);
        } catch (NumberFormatException e) {
        }
    }

    private void removeProductFromCart() {
        int idx = tabelkeranjang.getSelectedRow();
        if(idx != -1){
            DefaultTableModel m = (DefaultTableModel) tabelkeranjang.getModel();
            m.removeRow(idx); 
            updateharga();
        }else {
            JOptionPane.showMessageDialog(this, "Anda belum memilihi data"); 
        }
    }


    private void enableCheckoutBtn(boolean b) {
        if(b){
            tombolcheckout.setEnabled(b); 
        }else{
            tombolcheckout.setEnabled(b); 
        }
    }
}
